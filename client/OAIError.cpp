/**
 * LocationIQ
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIError.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIError::OAIError(QString json) {
    init();
    this->fromJson(json);
}

OAIError::OAIError() {
    init();
}

OAIError::~OAIError() {
    this->cleanup();
}

void
OAIError::init() {
    error = new QString("");
    m_error_isSet = false;
}

void
OAIError::cleanup() {
    if(error != nullptr) { 
        delete error;
    }
}

OAIError*
OAIError::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIError::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&error, pJson["error"], "QString", "QString");
    
}

QString
OAIError::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIError::asJsonObject() {
    QJsonObject obj;
    if(error != nullptr && *error != QString("")){
        toJsonValue(QString("error"), error, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIError::getError() {
    return error;
}
void
OAIError::setError(QString* error) {
    this->error = error;
    this->m_error_isSet = true;
}


bool
OAIError::isSet(){
    bool isObjectUpdated = false;
    do{
        if(error != nullptr && *error != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

