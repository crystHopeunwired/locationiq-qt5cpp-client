/**
 * LocationIQ
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OAISearchApi_H_
#define _OAI_OAISearchApi_H_

#include "OAIHttpRequest.h"

#include "OAIOAIError.h"
#include "OAIOAILocation.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAISearchApi: public QObject {
    Q_OBJECT

public:
    OAISearchApi();
    OAISearchApi(QString host, QString basePath);
    ~OAISearchApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void search(QString* q, QString* format, qint32 normalizecity, qint32 addressdetails, QString* viewbox, qint32 bounded, qint32 limit, QString* accept_language, QString* countrycodes, qint32 namedetails, qint32 dedupe, qint32 extratags);
    
private:
    void searchCallback (OAIHttpRequestWorker * worker);
    
signals:
    void searchSignal(QList<OAILocation*>* summary);
    
    void searchSignalE(QList<OAILocation*>* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void searchSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
