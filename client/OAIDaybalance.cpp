/**
 * LocationIQ
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIDaybalance.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIDaybalance::OAIDaybalance(QString json) {
    init();
    this->fromJson(json);
}

OAIDaybalance::OAIDaybalance() {
    init();
}

OAIDaybalance::~OAIDaybalance() {
    this->cleanup();
}

void
OAIDaybalance::init() {
    day = 0;
    m_day_isSet = false;
    bonus = 0;
    m_bonus_isSet = false;
}

void
OAIDaybalance::cleanup() {


}

OAIDaybalance*
OAIDaybalance::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIDaybalance::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&day, pJson["day"], "qint32", "");
    
    ::OpenAPI::setValue(&bonus, pJson["bonus"], "qint32", "");
    
}

QString
OAIDaybalance::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIDaybalance::asJsonObject() {
    QJsonObject obj;
    if(m_day_isSet){
        obj.insert("day", QJsonValue(day));
    }
    if(m_bonus_isSet){
        obj.insert("bonus", QJsonValue(bonus));
    }

    return obj;
}

qint32
OAIDaybalance::getDay() {
    return day;
}
void
OAIDaybalance::setDay(qint32 day) {
    this->day = day;
    this->m_day_isSet = true;
}

qint32
OAIDaybalance::getBonus() {
    return bonus;
}
void
OAIDaybalance::setBonus(qint32 bonus) {
    this->bonus = bonus;
    this->m_bonus_isSet = true;
}


bool
OAIDaybalance::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_day_isSet){ isObjectUpdated = true; break;}
        if(m_bonus_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

